---
apiVersion: v1
kind: Service
metadata:
  name: papergraph-hasura
  # annotations:
  #   cloud.google.com/neg: '{"ingress": true}' # Creates a NEG after an Ingress is created
  labels:
    app: papergraph
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: papergraph
    tier: hasura
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: papergraph-hasura
  labels:
    app: papergraph
spec:
  replicas: 1
  selector:
    matchLabels:
      app: papergraph
      tier: hasura
  template:
    metadata:
      labels:
        app: papergraph
        tier: hasura
    spec:
      containers:
        - name: hasura
          image: hasura/graphql-engine:v1.2.0.cli-migrations-v2
          ports:
            - containerPort: 8080
              name: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5        
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: papergraph-cloudsql
                  key: password
            - name: HASURA_GRAPHQL_DATABASE_URL
              value: postgres://postgres:$(PGPASSWORD)@papergraph-cloudsql:5432/papergraph
            - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
              value: "startup, http-log, webhook-log, websocket-log, query-log"
            # Disable console in production
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: "false"
            # Disable metadata and other APIs in production
            - name: HASURA_GRAPHQL_ENABLED_APIS
              value: graphql